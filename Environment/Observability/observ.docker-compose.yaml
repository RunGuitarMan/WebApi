services:
  # --- [PROMETHEUS] ---
  prometheus:
    container_name: webapi-prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - app-network
    restart: always

  # --- [GRAFANA] ---
  grafana:
    container_name: webapi-grafana
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - prometheus
    restart: always

  # --- [JAEGER 2] ---
  jaeger:
    container_name: webapi-jaeger
    image: jaegertracing/jaeger:2.3.0
    command:
      - "--set=receivers.otlp.protocols.http.endpoint=0.0.0.0:4318"
      - "--set=receivers.otlp.protocols.grpc.endpoint=0.0.0.0:4317"
    ports:
      - "5778:5778"    # Configurations
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
      - "14250:14250"  # Jaeger gRPC ingest
      - "14268:14268"  # Jaeger HTTP ingest
    networks:
      - app-network
    restart: always

  # --- [KAFKA UI] ---
  kafka-ui:
    container_name: webapi-kafka-ui
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9093"
    ports:
      - "8123:8080"
    networks:
      - app-network
    restart: always

  # --- [KAFKA EXPORTER] ---
  kafka_exporter:
    container_name: webapi-kafka-exporter
    image: danielqsj/kafka-exporter:latest
    command: ["--kafka.server=kafka:9093"]
    ports:
      - "9308:9308"
    networks:
      - app-network
    restart: always

  # --- [POSTGRES EXPORTER] ---
  postgres_exporter:
    container_name: webapi-postgres-exporter
    image: wrouesnel/postgres_exporter:latest
    environment:
      DATA_SOURCE_NAME: "postgresql://example_user:example_password@postgres:5432/example_db?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - app-network
    restart: always

  # --- [REDIS EXPORTER] ---
  redis_exporter:
    container_name: webapi-redis-exporter
    image: oliver006/redis_exporter:latest
    environment:
      REDIS_ADDR: "redis://redis:6379"
    ports:
      - "9121:9121"
    networks:
      - app-network
    restart: always

networks:
  app-network:
    external: true

volumes:
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data